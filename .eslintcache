[{"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\index.js":"1","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\reportWebVitals.js":"2","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\App.js":"3","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\Pin\\Pin.js":"4","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\model\\model.js":"5","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\Round\\Round.js":"6","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\Hint\\Hint.js":"7","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\End\\End.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1599,"mtime":1612479112064,"results":"12","hashOfConfig":"10"},{"size":422,"mtime":1612449143194,"results":"13","hashOfConfig":"10"},{"size":2437,"mtime":1612479619284,"results":"14","hashOfConfig":"10"},{"size":420,"mtime":1612184064995,"results":"15","hashOfConfig":"10"},{"size":365,"mtime":1612464823463,"results":"16","hashOfConfig":"10"},{"size":656,"mtime":1612478291691,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jbbw61",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\index.js",[],["37","38"],"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\reportWebVitals.js",[],"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\App.js",["39","40","41"],"import './App.css';\nimport Pin from './Pin/Pin'\nimport Hint from './Hint/Hint'\nimport End from './End/End'\nimport Round from './Round/Round'\nimport { useState } from 'react';\nimport { initialModel, createModel } from './model/model';\nimport { round } from 'lodash';\n\nfunction App() {\n  const [model, setModel] = useState(initialModel())\n  const { getAssumedColor, changeColor, check, reset } = createModel(model, setModel)\n  return (\n    <div>\n      <div>\n        <Pin color={getAssumedColor(0)} change={() => changeColor(0)}></Pin>\n        <Pin color={getAssumedColor(1)} change={() => changeColor(1)}></Pin>\n        <Pin color={getAssumedColor(2)} change={() => changeColor(2)}></Pin>\n        <Pin color={getAssumedColor(3)} change={() => changeColor(3)}></Pin>\n        <button onClick={check}>Check</button>\n      </div>\n      { model.rounds.map((round) => {\n        if (model.gamestate === \"PENDING\") {\n          return (<div className=\"rounds\">\n            <Pin color={round.assumedColors[0]} change={() => { }}></Pin>\n            <Pin color={round.assumedColors[1]} change={() => { }}></Pin>\n            <Pin color={round.assumedColors[2]} change={() => { }}></Pin>\n            <Pin color={round.assumedColors[3]} change={() => { }}></Pin>\n            <Hint color={round.result[0]}></Hint>\n            <Hint color={round.result[1]}></Hint>\n            <Hint color={round.result[2]}></Hint>\n            <Hint color={round.result[3]}></Hint>\n          </div>)\n        } else {\n        }\n      })}\n      <End result={model.gamestate} reset= {reset}></End>\n    </div>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\Pin\\Pin.js",[],"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\model\\model.js",["42","43","44","45","46","47","48","49"],"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\Round\\Round.js",[],"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\Hint\\Hint.js",[],"C:\\Users\\ph-ko\\temp\\tasks\\mastermind-react\\src\\End\\End.js",["50","51","52"],"import * as hints from \"mastermind/src/hint\"\r\nimport * as game from \"mastermind/src/game\"\r\n\r\nexport default function End({ result, reset }) {\r\n\r\n    const classes = [\"End\"].concat([\"End--\" + result])\r\n\r\n    let game;\r\n\r\n    if (result === \"WON\") {\r\n        return (<div className={classes.join(\" \")} >\r\n            <div> WON </div>\r\n            <button className=\"NewGame\" onClick={ reset }>New Game</button>\r\n        </div>)\r\n    } else if (result === \"LOST\") {\r\n        return (<div className={classes.join(\" \")} >\r\n        <div> LOST </div>\r\n        <button className=\"NewGame\" onClick={ reset }>New Game</button>\r\n    </div>)\r\n    }\r\n    return null\r\n}",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":22,"column":34,"nodeType":"64","messageId":"65","endLine":22,"endColumn":36},{"ruleId":"57","severity":1,"message":"66","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":14},{"ruleId":"57","severity":1,"message":"67","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"68","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":37},{"ruleId":"57","severity":1,"message":"69","line":2,"column":13,"nodeType":"59","messageId":"60","endLine":2,"endColumn":17},{"ruleId":"57","severity":1,"message":"70","line":6,"column":10,"nodeType":"59","messageId":"60","endLine":6,"endColumn":18},{"ruleId":"57","severity":1,"message":"71","line":7,"column":14,"nodeType":"59","messageId":"60","endLine":7,"endColumn":18},{"ruleId":"57","severity":1,"message":"72","line":7,"column":20,"nodeType":"59","messageId":"60","endLine":7,"endColumn":26},{"ruleId":"57","severity":1,"message":"73","line":7,"column":28,"nodeType":"59","messageId":"60","endLine":7,"endColumn":33},{"ruleId":"57","severity":1,"message":"74","line":1,"column":13,"nodeType":"59","messageId":"60","endLine":1,"endColumn":18},{"ruleId":"57","severity":1,"message":"69","line":2,"column":13,"nodeType":"59","messageId":"60","endLine":2,"endColumn":17},{"ruleId":"57","severity":1,"message":"69","line":8,"column":9,"nodeType":"59","messageId":"60","endLine":8,"endColumn":13},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Round' is defined but never used.","Identifier","unusedVar","'round' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FITS' is defined but never used.","'PARTIALLY' is defined but never used.","'NOT_AT_ALL' is defined but never used.","'game' is defined but never used.","'useState' is defined but never used.","'BLUE' is assigned a value but never used.","'YELLOW' is assigned a value but never used.","'GREEN' is assigned a value but never used.","'hints' is defined but never used.","no-global-assign","no-unsafe-negation"]